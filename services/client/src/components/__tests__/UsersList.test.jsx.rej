diff a/services/client/src/components/__tests__/UsersList.test.jsx b/services/client/src/components/__tests__/UsersList.test.jsx	(rejected hunks)
@@ -1,3 +1,3 @@
-import React from 'react';
-import { shallow } from 'enzyme';
-import renderer from 'react-test-renderer';
+import React from 'react'
+import { shallow } from 'enzyme'
+import renderer from 'react-test-renderer'
@@ -5 +5 @@ import renderer from 'react-test-renderer';
-import UsersList from '../UsersList';
+import UsersList from '../UsersList'
@@ -9,5 +9,5 @@ const users = [
-    'active': true,
-    'admin': false,
-    'email': 'hermanmu@gmail.com',
-    'id': 1,
-    'username': 'daryl'
+    active: true,
+    admin: false,
+    email: 'hermanmu@gmail.com',
+    id: 1,
+    username: 'daryl',
@@ -16,6 +16,6 @@ const users = [
-    'active': true,
-    'admin': false,
-    'email': 'daryl@blpc.us',
-    'id': 2,
-    'username': 'darylblpc'
-  }
+    active: true,
+    admin: false,
+    email: 'daryl@blpc.us',
+    id: 2,
+    username: 'darylblpc',
+  },
@@ -25,2 +25,2 @@ test('UsersList renders properly', () => {
-  const wrapper = shallow(<UsersList users={users}/>);
-  expect(wrapper.find('h1').get(0).props.children).toBe('All Users');
+  const wrapper = shallow(<UsersList users={users} />)
+  expect(wrapper.find('h1').get(0).props.children).toBe('All Users')
@@ -28,2 +28,2 @@ test('UsersList renders properly', () => {
-  const table = wrapper.find('table');
-  expect(table.length).toBe(1);
+  const table = wrapper.find('table')
+  expect(table.length).toBe(1)
@@ -31,8 +31,8 @@ test('UsersList renders properly', () => {
-  expect(wrapper.find('thead').length).toBe(1);
-  const th = wrapper.find('th');
-  expect(th.length).toBe(5);
-  expect(th.get(0).props.children).toBe('ID');
-  expect(th.get(1).props.children).toBe('Email');
-  expect(th.get(2).props.children).toBe('Username');
-  expect(th.get(3).props.children).toBe('Active');
-  expect(th.get(4).props.children).toBe('Admin');
+  expect(wrapper.find('thead').length).toBe(1)
+  const th = wrapper.find('th')
+  expect(th.length).toBe(5)
+  expect(th.get(0).props.children).toBe('ID')
+  expect(th.get(1).props.children).toBe('Email')
+  expect(th.get(2).props.children).toBe('Username')
+  expect(th.get(3).props.children).toBe('Active')
+  expect(th.get(4).props.children).toBe('Admin')
@@ -40,10 +40,10 @@ test('UsersList renders properly', () => {
-  expect(wrapper.find('tbody').length).toBe(1);
-  expect(wrapper.find('tbody > tr').length).toBe(2);
-  const td = wrapper.find('tbody > tr > td');
-  expect(td.length).toBe(10);
-  expect(td.get(0).props.children).toBe(1);
-  expect(td.get(1).props.children).toBe('hermanmu@gmail.com');
-  expect(td.get(2).props.children).toBe('daryl');
-  expect(td.get(3).props.children).toBe('true');
-  expect(td.get(4).props.children).toBe('false');
-});
+  expect(wrapper.find('tbody').length).toBe(1)
+  expect(wrapper.find('tbody > tr').length).toBe(2)
+  const td = wrapper.find('tbody > tr > td')
+  expect(td.length).toBe(10)
+  expect(td.get(0).props.children).toBe(1)
+  expect(td.get(1).props.children).toBe('hermanmu@gmail.com')
+  expect(td.get(2).props.children).toBe('daryl')
+  expect(td.get(3).props.children).toBe('true')
+  expect(td.get(4).props.children).toBe('false')
+})
@@ -52,3 +52,3 @@ test('UsersList renders a snapshot properly', () => {
-  const tree = renderer.create(<UsersList users={users}/>).toJSON();
-  expect(tree).toMatchSnapshot();
-});
+  const tree = renderer.create(<UsersList users={users} />).toJSON()
+  expect(tree).toMatchSnapshot()
+})
