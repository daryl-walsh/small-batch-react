79c262efb7cce435c2c4fd4e001b8682
const randomstring = require('randomstring');

const username = randomstring.generate();
const email = `${username}@test.com`;
const password = 'Cypr3ssT3st!#';
describe('Index', () => {
  it('should display the page correctly if a user is not logged in', () => {
    cy.visit('/').get('h1').contains('Exercises').get('.navbar-burger').click().get('a').contains('User Status').should('not.be.visible').get('a').contains('Log Out').should('not.be.visible').get('a').contains('Register').get('a').contains('Log In').get('a').contains('Swagger').get('a').contains('Users').get('.notification.is-warning').contains('Please log in to submit an exercise.').get('.notification.is-success').should('not.be.visible');
  }); // new

  it('should display the page correctly if a user is logged in`', () => {
    cy.server();
    cy.route('POST', 'auth/register').as('createUser'); // register user

    cy.visit('/register').get('input[name="username"]').type(username).get('input[name="email"]').type(email).get('input[name="password"]').type(password).get('input[type="submit"]').click().wait('@createUser'); // assert '/' is displayed properly

    cy.get('h1').contains('Exercises').get('.navbar-burger').click().get('a').contains('User Status').get('a').contains('Log Out').get('a').contains('Register').should('not.be.visible').get('a').contains('Log In').should('not.be.visible').get('a').contains('Swagger').get('a').contains('Users').get('button').contains('Run Code').get('.notification.is-warning').should('not.be.visible').get('.notification.is-success').should('not.be.visible');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnNwZWMuanMiXSwibmFtZXMiOlsicmFuZG9tc3RyaW5nIiwicmVxdWlyZSIsInVzZXJuYW1lIiwiZ2VuZXJhdGUiLCJlbWFpbCIsInBhc3N3b3JkIiwiZGVzY3JpYmUiLCJpdCIsImN5IiwidmlzaXQiLCJnZXQiLCJjb250YWlucyIsImNsaWNrIiwic2hvdWxkIiwic2VydmVyIiwicm91dGUiLCJhcyIsInR5cGUiLCJ3YWl0Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUVBLE1BQU1DLFFBQVEsR0FBR0YsWUFBWSxDQUFDRyxRQUFiLEVBQWpCO0FBQ0EsTUFBTUMsS0FBSyxHQUFJLEdBQUVGLFFBQVMsV0FBMUI7QUFDQSxNQUFNRyxRQUFRLEdBQUcsZUFBakI7QUFFQUMsUUFBUSxDQUFDLE9BQUQsRUFBVSxNQUFNO0FBQ3RCQyxFQUFBQSxFQUFFLENBQUMsOERBQUQsRUFBaUUsTUFBTTtBQUN2RUMsSUFBQUEsRUFBRSxDQUFDQyxLQUFILENBQVMsR0FBVCxFQUNHQyxHQURILENBQ08sSUFEUCxFQUVHQyxRQUZILENBRVksV0FGWixFQUdHRCxHQUhILENBR08sZ0JBSFAsRUFJR0UsS0FKSCxHQUtHRixHQUxILENBS08sR0FMUCxFQU1HQyxRQU5ILENBTVksYUFOWixFQU9HRSxNQVBILENBT1UsZ0JBUFYsRUFRR0gsR0FSSCxDQVFPLEdBUlAsRUFTR0MsUUFUSCxDQVNZLFNBVFosRUFVR0UsTUFWSCxDQVVVLGdCQVZWLEVBV0dILEdBWEgsQ0FXTyxHQVhQLEVBWUdDLFFBWkgsQ0FZWSxVQVpaLEVBYUdELEdBYkgsQ0FhTyxHQWJQLEVBY0dDLFFBZEgsQ0FjWSxRQWRaLEVBZUdELEdBZkgsQ0FlTyxHQWZQLEVBZ0JHQyxRQWhCSCxDQWdCWSxTQWhCWixFQWlCR0QsR0FqQkgsQ0FpQk8sR0FqQlAsRUFrQkdDLFFBbEJILENBa0JZLE9BbEJaLEVBbUJHRCxHQW5CSCxDQW1CTywwQkFuQlAsRUFvQkdDLFFBcEJILENBb0JZLHNDQXBCWixFQXFCR0QsR0FyQkgsQ0FxQk8sMEJBckJQLEVBc0JHRyxNQXRCSCxDQXNCVSxnQkF0QlY7QUF1QkQsR0F4QkMsQ0FBRixDQURzQixDQTJCdEI7O0FBQ0FOLEVBQUFBLEVBQUUsQ0FBQywyREFBRCxFQUE4RCxNQUFNO0FBQ3BFQyxJQUFBQSxFQUFFLENBQUNNLE1BQUg7QUFDQU4sSUFBQUEsRUFBRSxDQUFDTyxLQUFILENBQVMsTUFBVCxFQUFpQixlQUFqQixFQUFrQ0MsRUFBbEMsQ0FBcUMsWUFBckMsRUFGb0UsQ0FJcEU7O0FBQ0FSLElBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTLFdBQVQsRUFDR0MsR0FESCxDQUNPLHdCQURQLEVBRUdPLElBRkgsQ0FFUWYsUUFGUixFQUdHUSxHQUhILENBR08scUJBSFAsRUFJR08sSUFKSCxDQUlRYixLQUpSLEVBS0dNLEdBTEgsQ0FLTyx3QkFMUCxFQU1HTyxJQU5ILENBTVFaLFFBTlIsRUFPR0ssR0FQSCxDQU9PLHNCQVBQLEVBUUdFLEtBUkgsR0FTR00sSUFUSCxDQVNRLGFBVFIsRUFMb0UsQ0FnQnBFOztBQUNBVixJQUFBQSxFQUFFLENBQUNFLEdBQUgsQ0FBTyxJQUFQLEVBQ0dDLFFBREgsQ0FDWSxXQURaLEVBRUdELEdBRkgsQ0FFTyxnQkFGUCxFQUdHRSxLQUhILEdBSUdGLEdBSkgsQ0FJTyxHQUpQLEVBS0dDLFFBTEgsQ0FLWSxhQUxaLEVBTUdELEdBTkgsQ0FNTyxHQU5QLEVBT0dDLFFBUEgsQ0FPWSxTQVBaLEVBUUdELEdBUkgsQ0FRTyxHQVJQLEVBU0dDLFFBVEgsQ0FTWSxVQVRaLEVBVUdFLE1BVkgsQ0FVVSxnQkFWVixFQVdHSCxHQVhILENBV08sR0FYUCxFQVlHQyxRQVpILENBWVksUUFaWixFQWFHRSxNQWJILENBYVUsZ0JBYlYsRUFjR0gsR0FkSCxDQWNPLEdBZFAsRUFlR0MsUUFmSCxDQWVZLFNBZlosRUFnQkdELEdBaEJILENBZ0JPLEdBaEJQLEVBaUJHQyxRQWpCSCxDQWlCWSxPQWpCWixFQWtCR0QsR0FsQkgsQ0FrQk8sUUFsQlAsRUFtQkdDLFFBbkJILENBbUJZLFVBbkJaLEVBb0JHRCxHQXBCSCxDQW9CTywwQkFwQlAsRUFxQkdHLE1BckJILENBcUJVLGdCQXJCVixFQXNCR0gsR0F0QkgsQ0FzQk8sMEJBdEJQLEVBdUJHRyxNQXZCSCxDQXVCVSxnQkF2QlY7QUF3QkQsR0F6Q0MsQ0FBRjtBQTBDRCxDQXRFTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmFuZG9tc3RyaW5nID0gcmVxdWlyZSgncmFuZG9tc3RyaW5nJylcblxuY29uc3QgdXNlcm5hbWUgPSByYW5kb21zdHJpbmcuZ2VuZXJhdGUoKVxuY29uc3QgZW1haWwgPSBgJHt1c2VybmFtZX1AdGVzdC5jb21gXG5jb25zdCBwYXNzd29yZCA9ICdDeXByM3NzVDNzdCEjJ1xuXG5kZXNjcmliZSgnSW5kZXgnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgZGlzcGxheSB0aGUgcGFnZSBjb3JyZWN0bHkgaWYgYSB1c2VyIGlzIG5vdCBsb2dnZWQgaW4nLCAoKSA9PiB7XG4gICAgY3kudmlzaXQoJy8nKVxuICAgICAgLmdldCgnaDEnKVxuICAgICAgLmNvbnRhaW5zKCdFeGVyY2lzZXMnKVxuICAgICAgLmdldCgnLm5hdmJhci1idXJnZXInKVxuICAgICAgLmNsaWNrKClcbiAgICAgIC5nZXQoJ2EnKVxuICAgICAgLmNvbnRhaW5zKCdVc2VyIFN0YXR1cycpXG4gICAgICAuc2hvdWxkKCdub3QuYmUudmlzaWJsZScpXG4gICAgICAuZ2V0KCdhJylcbiAgICAgIC5jb250YWlucygnTG9nIE91dCcpXG4gICAgICAuc2hvdWxkKCdub3QuYmUudmlzaWJsZScpXG4gICAgICAuZ2V0KCdhJylcbiAgICAgIC5jb250YWlucygnUmVnaXN0ZXInKVxuICAgICAgLmdldCgnYScpXG4gICAgICAuY29udGFpbnMoJ0xvZyBJbicpXG4gICAgICAuZ2V0KCdhJylcbiAgICAgIC5jb250YWlucygnU3dhZ2dlcicpXG4gICAgICAuZ2V0KCdhJylcbiAgICAgIC5jb250YWlucygnVXNlcnMnKVxuICAgICAgLmdldCgnLm5vdGlmaWNhdGlvbi5pcy13YXJuaW5nJylcbiAgICAgIC5jb250YWlucygnUGxlYXNlIGxvZyBpbiB0byBzdWJtaXQgYW4gZXhlcmNpc2UuJylcbiAgICAgIC5nZXQoJy5ub3RpZmljYXRpb24uaXMtc3VjY2VzcycpXG4gICAgICAuc2hvdWxkKCdub3QuYmUudmlzaWJsZScpXG4gIH0pXG5cbiAgLy8gbmV3XG4gIGl0KCdzaG91bGQgZGlzcGxheSB0aGUgcGFnZSBjb3JyZWN0bHkgaWYgYSB1c2VyIGlzIGxvZ2dlZCBpbmAnLCAoKSA9PiB7XG4gICAgY3kuc2VydmVyKClcbiAgICBjeS5yb3V0ZSgnUE9TVCcsICdhdXRoL3JlZ2lzdGVyJykuYXMoJ2NyZWF0ZVVzZXInKVxuXG4gICAgLy8gcmVnaXN0ZXIgdXNlclxuICAgIGN5LnZpc2l0KCcvcmVnaXN0ZXInKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cInVzZXJuYW1lXCJdJylcbiAgICAgIC50eXBlKHVzZXJuYW1lKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cImVtYWlsXCJdJylcbiAgICAgIC50eXBlKGVtYWlsKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cInBhc3N3b3JkXCJdJylcbiAgICAgIC50eXBlKHBhc3N3b3JkKVxuICAgICAgLmdldCgnaW5wdXRbdHlwZT1cInN1Ym1pdFwiXScpXG4gICAgICAuY2xpY2soKVxuICAgICAgLndhaXQoJ0BjcmVhdGVVc2VyJylcblxuICAgIC8vIGFzc2VydCAnLycgaXMgZGlzcGxheWVkIHByb3Blcmx5XG4gICAgY3kuZ2V0KCdoMScpXG4gICAgICAuY29udGFpbnMoJ0V4ZXJjaXNlcycpXG4gICAgICAuZ2V0KCcubmF2YmFyLWJ1cmdlcicpXG4gICAgICAuY2xpY2soKVxuICAgICAgLmdldCgnYScpXG4gICAgICAuY29udGFpbnMoJ1VzZXIgU3RhdHVzJylcbiAgICAgIC5nZXQoJ2EnKVxuICAgICAgLmNvbnRhaW5zKCdMb2cgT3V0JylcbiAgICAgIC5nZXQoJ2EnKVxuICAgICAgLmNvbnRhaW5zKCdSZWdpc3RlcicpXG4gICAgICAuc2hvdWxkKCdub3QuYmUudmlzaWJsZScpXG4gICAgICAuZ2V0KCdhJylcbiAgICAgIC5jb250YWlucygnTG9nIEluJylcbiAgICAgIC5zaG91bGQoJ25vdC5iZS52aXNpYmxlJylcbiAgICAgIC5nZXQoJ2EnKVxuICAgICAgLmNvbnRhaW5zKCdTd2FnZ2VyJylcbiAgICAgIC5nZXQoJ2EnKVxuICAgICAgLmNvbnRhaW5zKCdVc2VycycpXG4gICAgICAuZ2V0KCdidXR0b24nKVxuICAgICAgLmNvbnRhaW5zKCdSdW4gQ29kZScpXG4gICAgICAuZ2V0KCcubm90aWZpY2F0aW9uLmlzLXdhcm5pbmcnKVxuICAgICAgLnNob3VsZCgnbm90LmJlLnZpc2libGUnKVxuICAgICAgLmdldCgnLm5vdGlmaWNhdGlvbi5pcy1zdWNjZXNzJylcbiAgICAgIC5zaG91bGQoJ25vdC5iZS52aXNpYmxlJylcbiAgfSlcbn0pXG4iXX0=