{"version":3,"sources":["status.spec.js"],"names":["randomstring","require","username","generate","email","password","describe","it","cy","visit","get","contains","should","type","click","wait"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AAEA,MAAMC,QAAQ,GAAGF,YAAY,CAACG,QAAb,EAAjB;AACA,MAAMC,KAAK,GAAI,GAAEF,QAAS,WAA1B;AACA,MAAMG,QAAQ,GAAG,eAAjB;AAEAC,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,EAAE,CAAC,yDAAD,EAA4D,MAAM;AAClEC,IAAAA,EAAE,CAACC,KAAH,CAAS,SAAT,EACGC,GADH,CACO,GADP,EAEGC,QAFH,CAEY,qCAFZ,EAGGD,GAHH,CAGO,GAHP,EAIGC,QAJH,CAIY,aAJZ,EAKGC,MALH,CAKU,gBALV,EAMGF,GANH,CAMO,GANP,EAOGC,QAPH,CAOY,SAPZ,EAQGC,MARH,CAQU,gBARV,EASGF,GATH,CASO,GATP,EAUGC,QAVH,CAUY,UAVZ,EAWGD,GAXH,CAWO,GAXP,EAYGC,QAZH,CAYY,QAZZ;AAaD,GAdC,CAAF;AAgBAJ,EAAAA,EAAE,CAAC,iDAAD,EAAoD,MAAM;AAC1D;AACAC,IAAAA,EAAE,CAACC,KAAH,CAAS,WAAT,EACGC,GADH,CACO,wBADP,EAEGG,IAFH,CAEQX,QAFR,EAGGQ,GAHH,CAGO,qBAHP,EAIGG,IAJH,CAIQT,KAJR,EAKGM,GALH,CAKO,wBALP,EAMGG,IANH,CAMQR,QANR,EAOGK,GAPH,CAOO,sBAPP,EAQGI,KARH,GASGJ,GATH,CASO,gBATP,EAUGI,KAVH;AAYAN,IAAAA,EAAE,CAACO,IAAH,CAAQ,GAAR,EAd0D,CAgB1D;;AACAP,IAAAA,EAAE,CAACC,KAAH,CAAS,SAAT;AACAD,IAAAA,EAAE,CAACE,GAAH,CAAO,gBAAP,EAAyBI,KAAzB;AACAN,IAAAA,EAAE,CAACG,QAAH,CAAY,aAAZ,EAA2BG,KAA3B;AACAN,IAAAA,EAAE,CAACE,GAAH,CAAO,aAAP,EACGC,QADH,CACY,UADZ,EAEGD,GAFH,CAEO,aAFP,EAGGC,QAHH,CAGY,QAHZ,EAIGD,GAJH,CAIO,IAJP,EAKGC,QALH,CAKYP,KALZ,EAMGM,GANH,CAMO,aANP,EAOGC,QAPH,CAOY,WAPZ,EAQGD,GARH,CAQO,IARP,EASGC,QATH,CASYT,QATZ,EAUGQ,GAVH,CAUO,GAVP,EAWGC,QAXH,CAWY,aAXZ,EAYGD,GAZH,CAYO,GAZP,EAaGC,QAbH,CAaY,SAbZ,EAcGD,GAdH,CAcO,GAdP,EAeGC,QAfH,CAeY,UAfZ,EAgBGC,MAhBH,CAgBU,gBAhBV,EAiBGF,GAjBH,CAiBO,GAjBP,EAkBGC,QAlBH,CAkBY,QAlBZ,EAmBGC,MAnBH,CAmBU,gBAnBV;AAoBD,GAxCC,CAAF;AAyCD,CA1DO,CAAR","sourcesContent":["const randomstring = require('randomstring')\n\nconst username = randomstring.generate()\nconst email = `${username}@test.com`\nconst password = 'Cypr3ssT3st!#'\n\ndescribe('Status', () => {\n  it('should not display user info if a user is not logged in', () => {\n    cy.visit('/status')\n      .get('p')\n      .contains('You must be logged in to view this.')\n      .get('a')\n      .contains('User Status')\n      .should('not.be.visible')\n      .get('a')\n      .contains('Log Out')\n      .should('not.be.visible')\n      .get('a')\n      .contains('Register')\n      .get('a')\n      .contains('Log In')\n  })\n\n  it('should display user info if a user is logged in', () => {\n    // register user\n    cy.visit('/register')\n      .get('input[name=\"username\"]')\n      .type(username)\n      .get('input[name=\"email\"]')\n      .type(email)\n      .get('input[name=\"password\"]')\n      .type(password)\n      .get('input[type=\"submit\"]')\n      .click()\n      .get('.navbar-burger')\n      .click()\n\n    cy.wait(500)\n\n    // assert '/status' is displayed properly\n    cy.visit('/status')\n    cy.get('.navbar-burger').click()\n    cy.contains('User Status').click()\n    cy.get('li > strong')\n      .contains('User ID:')\n      .get('li > strong')\n      .contains('Email:')\n      .get('li')\n      .contains(email)\n      .get('li > strong')\n      .contains('Username:')\n      .get('li')\n      .contains(username)\n      .get('a')\n      .contains('User Status')\n      .get('a')\n      .contains('Log Out')\n      .get('a')\n      .contains('Register')\n      .should('not.be.visible')\n      .get('a')\n      .contains('Log In')\n      .should('not.be.visible')\n  })\n})\n"]}