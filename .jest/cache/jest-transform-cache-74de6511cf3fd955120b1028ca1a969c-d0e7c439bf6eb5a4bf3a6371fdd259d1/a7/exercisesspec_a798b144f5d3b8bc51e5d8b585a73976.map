{"version":3,"sources":["exercises.spec.js"],"names":["randomstring","require","username","generate","email","password","describe","it","cy","visit","get","contains","should","server","route","as","Cypress","env","type","click","wait"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AAEA,MAAMC,QAAQ,GAAGF,YAAY,CAACG,QAAb,EAAjB;AACA,MAAMC,KAAK,GAAI,GAAEF,QAAS,WAA1B;AACA,MAAMG,QAAQ,GAAG,gBAAjB;AAEAC,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BC,EAAAA,EAAE,CAAC,mEAAD,EAAsE,MAAM;AAC5EC,IAAAA,EAAE,CAACC,KAAH,CAAS,GAAT,EACGC,GADH,CACO,IADP,EAEGC,QAFH,CAEY,WAFZ,EAGGD,GAHH,CAGO,0BAHP,EAIGC,QAJH,CAIY,sCAJZ,EAKGD,GALH,CAKO,QALP,EAMGE,MANH,CAMU,gBANV;AAOD,GARC,CAAF;AAUAL,EAAAA,EAAE,CAAC,wDAAD,EAA2D,MAAM;AACjEC,IAAAA,EAAE,CAACK,MAAH;AACAL,IAAAA,EAAE,CAACM,KAAH,CAAS,MAAT,EAAiB,eAAjB,EAAkCC,EAAlC,CAAqC,YAArC;AACAP,IAAAA,EAAE,CAACM,KAAH,CAAS,MAAT,EAAiBE,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAjB,EAA2DF,EAA3D,CACE,eADF,EAHiE,CAOjE;;AACAP,IAAAA,EAAE,CAACC,KAAH,CAAS,WAAT,EACGC,GADH,CACO,wBADP,EAEGQ,IAFH,CAEQhB,QAFR,EAGGQ,GAHH,CAGO,qBAHP,EAIGQ,IAJH,CAIQd,KAJR,EAKGM,GALH,CAKO,wBALP,EAMGQ,IANH,CAMQb,QANR,EAOGK,GAPH,CAOO,sBAPP,EAQGS,KARH,GASGC,IATH,CASQ,aATR,EARiE,CAmBjE;;AACAZ,IAAAA,EAAE,CAACE,GAAH,CAAO,IAAP,EACGC,QADH,CACY,WADZ,EAEGD,GAFH,CAEO,0BAFP,EAGGC,QAHH,CAGY,UAHZ,EAIGD,GAJH,CAIO,yBAJP,EAKGE,MALH,CAKU,gBALV,EAMGF,GANH,CAMO,0BANP,EAOGC,QAPH,CAOY,UAPZ,EApBiE,CA6BjE;;AACAH,IAAAA,EAAE,CAACE,GAAH,CAAO,QAAP,EACGC,QADH,CACY,UADZ,EAEGQ,KAFH,GAGGC,IAHH,CAGQ,GAHR,EAIGV,GAJH,CAIO,kBAJP,EAKGC,QALH,CAKY,YALZ;AAMD,GApCC,CAAF;AAqCD,CAhDO,CAAR","sourcesContent":["const randomstring = require('randomstring')\n\nconst username = randomstring.generate()\nconst email = `${username}@test.com`\nconst password = 'greaterthanten'\n\ndescribe('Exercises', () => {\n  it('should display the exercises correctly if a user is not logged in', () => {\n    cy.visit('/')\n      .get('h1')\n      .contains('Exercises')\n      .get('.notification.is-warning')\n      .contains('Please log in to submit an exercise.')\n      .get('button')\n      .should('not.be.visible')\n  })\n\n  it('should allow a user to submit an exercise if logged in', () => {\n    cy.server()\n    cy.route('POST', 'auth/register').as('createUser')\n    cy.route('POST', Cypress.env('REACT_APP_API_GATEWAY_URL')).as(\n      'gradeExercise'\n    )\n\n    // register a new user\n    cy.visit('/register')\n      .get('input[name=\"username\"]')\n      .type(username)\n      .get('input[name=\"email\"]')\n      .type(email)\n      .get('input[name=\"password\"]')\n      .type(password)\n      .get('input[type=\"submit\"]')\n      .click()\n      .wait('@createUser')\n\n    // assert exercises are displayed correctly\n    cy.get('h1')\n      .contains('Exercises')\n      .get('.notification.is-success')\n      .contains('Welcome!')\n      .get('.notification.is-danger')\n      .should('not.be.visible')\n      .get('button.button.is-primary')\n      .contains('Run Code')\n\n    // assert user can submit an exercise\n    cy.get('button')\n      .contains('Run Code')\n      .click()\n      .wait(600)\n      .get('h5 > .grade-text')\n      .contains('Incorrect!')\n  })\n})\n"]}