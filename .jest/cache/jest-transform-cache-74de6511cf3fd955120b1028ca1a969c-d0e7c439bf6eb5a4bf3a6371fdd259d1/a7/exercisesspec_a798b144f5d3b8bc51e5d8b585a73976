3e98928c0ce737a7f018b7c7dee01e71
const randomstring = require('randomstring');

const username = randomstring.generate();
const email = `${username}@test.com`;
const password = 'greaterthanten';
describe('Exercises', () => {
  it('should display the exercises correctly if a user is not logged in', () => {
    cy.visit('/').get('h1').contains('Exercises').get('.notification.is-warning').contains('Please log in to submit an exercise.').get('button').should('not.be.visible');
  });
  it('should allow a user to submit an exercise if logged in', () => {
    cy.server();
    cy.route('POST', 'auth/register').as('createUser');
    cy.route('POST', Cypress.env('REACT_APP_API_GATEWAY_URL')).as('gradeExercise'); // register a new user

    cy.visit('/register').get('input[name="username"]').type(username).get('input[name="email"]').type(email).get('input[name="password"]').type(password).get('input[type="submit"]').click().wait('@createUser'); // assert exercises are displayed correctly

    cy.get('h1').contains('Exercises').get('.notification.is-success').contains('Welcome!').get('.notification.is-danger').should('not.be.visible').get('button.button.is-primary').contains('Run Code'); // assert user can submit an exercise

    cy.get('button').contains('Run Code').click().wait(600).get('h5 > .grade-text').contains('Incorrect!');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4ZXJjaXNlcy5zcGVjLmpzIl0sIm5hbWVzIjpbInJhbmRvbXN0cmluZyIsInJlcXVpcmUiLCJ1c2VybmFtZSIsImdlbmVyYXRlIiwiZW1haWwiLCJwYXNzd29yZCIsImRlc2NyaWJlIiwiaXQiLCJjeSIsInZpc2l0IiwiZ2V0IiwiY29udGFpbnMiLCJzaG91bGQiLCJzZXJ2ZXIiLCJyb3V0ZSIsImFzIiwiQ3lwcmVzcyIsImVudiIsInR5cGUiLCJjbGljayIsIndhaXQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBNUI7O0FBRUEsTUFBTUMsUUFBUSxHQUFHRixZQUFZLENBQUNHLFFBQWIsRUFBakI7QUFDQSxNQUFNQyxLQUFLLEdBQUksR0FBRUYsUUFBUyxXQUExQjtBQUNBLE1BQU1HLFFBQVEsR0FBRyxnQkFBakI7QUFFQUMsUUFBUSxDQUFDLFdBQUQsRUFBYyxNQUFNO0FBQzFCQyxFQUFBQSxFQUFFLENBQUMsbUVBQUQsRUFBc0UsTUFBTTtBQUM1RUMsSUFBQUEsRUFBRSxDQUFDQyxLQUFILENBQVMsR0FBVCxFQUNHQyxHQURILENBQ08sSUFEUCxFQUVHQyxRQUZILENBRVksV0FGWixFQUdHRCxHQUhILENBR08sMEJBSFAsRUFJR0MsUUFKSCxDQUlZLHNDQUpaLEVBS0dELEdBTEgsQ0FLTyxRQUxQLEVBTUdFLE1BTkgsQ0FNVSxnQkFOVjtBQU9ELEdBUkMsQ0FBRjtBQVVBTCxFQUFBQSxFQUFFLENBQUMsd0RBQUQsRUFBMkQsTUFBTTtBQUNqRUMsSUFBQUEsRUFBRSxDQUFDSyxNQUFIO0FBQ0FMLElBQUFBLEVBQUUsQ0FBQ00sS0FBSCxDQUFTLE1BQVQsRUFBaUIsZUFBakIsRUFBa0NDLEVBQWxDLENBQXFDLFlBQXJDO0FBQ0FQLElBQUFBLEVBQUUsQ0FBQ00sS0FBSCxDQUFTLE1BQVQsRUFBaUJFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDJCQUFaLENBQWpCLEVBQTJERixFQUEzRCxDQUNFLGVBREYsRUFIaUUsQ0FPakU7O0FBQ0FQLElBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTLFdBQVQsRUFDR0MsR0FESCxDQUNPLHdCQURQLEVBRUdRLElBRkgsQ0FFUWhCLFFBRlIsRUFHR1EsR0FISCxDQUdPLHFCQUhQLEVBSUdRLElBSkgsQ0FJUWQsS0FKUixFQUtHTSxHQUxILENBS08sd0JBTFAsRUFNR1EsSUFOSCxDQU1RYixRQU5SLEVBT0dLLEdBUEgsQ0FPTyxzQkFQUCxFQVFHUyxLQVJILEdBU0dDLElBVEgsQ0FTUSxhQVRSLEVBUmlFLENBbUJqRTs7QUFDQVosSUFBQUEsRUFBRSxDQUFDRSxHQUFILENBQU8sSUFBUCxFQUNHQyxRQURILENBQ1ksV0FEWixFQUVHRCxHQUZILENBRU8sMEJBRlAsRUFHR0MsUUFISCxDQUdZLFVBSFosRUFJR0QsR0FKSCxDQUlPLHlCQUpQLEVBS0dFLE1BTEgsQ0FLVSxnQkFMVixFQU1HRixHQU5ILENBTU8sMEJBTlAsRUFPR0MsUUFQSCxDQU9ZLFVBUFosRUFwQmlFLENBNkJqRTs7QUFDQUgsSUFBQUEsRUFBRSxDQUFDRSxHQUFILENBQU8sUUFBUCxFQUNHQyxRQURILENBQ1ksVUFEWixFQUVHUSxLQUZILEdBR0dDLElBSEgsQ0FHUSxHQUhSLEVBSUdWLEdBSkgsQ0FJTyxrQkFKUCxFQUtHQyxRQUxILENBS1ksWUFMWjtBQU1ELEdBcENDLENBQUY7QUFxQ0QsQ0FoRE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJhbmRvbXN0cmluZyA9IHJlcXVpcmUoJ3JhbmRvbXN0cmluZycpXG5cbmNvbnN0IHVzZXJuYW1lID0gcmFuZG9tc3RyaW5nLmdlbmVyYXRlKClcbmNvbnN0IGVtYWlsID0gYCR7dXNlcm5hbWV9QHRlc3QuY29tYFxuY29uc3QgcGFzc3dvcmQgPSAnZ3JlYXRlcnRoYW50ZW4nXG5cbmRlc2NyaWJlKCdFeGVyY2lzZXMnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgZGlzcGxheSB0aGUgZXhlcmNpc2VzIGNvcnJlY3RseSBpZiBhIHVzZXIgaXMgbm90IGxvZ2dlZCBpbicsICgpID0+IHtcbiAgICBjeS52aXNpdCgnLycpXG4gICAgICAuZ2V0KCdoMScpXG4gICAgICAuY29udGFpbnMoJ0V4ZXJjaXNlcycpXG4gICAgICAuZ2V0KCcubm90aWZpY2F0aW9uLmlzLXdhcm5pbmcnKVxuICAgICAgLmNvbnRhaW5zKCdQbGVhc2UgbG9nIGluIHRvIHN1Ym1pdCBhbiBleGVyY2lzZS4nKVxuICAgICAgLmdldCgnYnV0dG9uJylcbiAgICAgIC5zaG91bGQoJ25vdC5iZS52aXNpYmxlJylcbiAgfSlcblxuICBpdCgnc2hvdWxkIGFsbG93IGEgdXNlciB0byBzdWJtaXQgYW4gZXhlcmNpc2UgaWYgbG9nZ2VkIGluJywgKCkgPT4ge1xuICAgIGN5LnNlcnZlcigpXG4gICAgY3kucm91dGUoJ1BPU1QnLCAnYXV0aC9yZWdpc3RlcicpLmFzKCdjcmVhdGVVc2VyJylcbiAgICBjeS5yb3V0ZSgnUE9TVCcsIEN5cHJlc3MuZW52KCdSRUFDVF9BUFBfQVBJX0dBVEVXQVlfVVJMJykpLmFzKFxuICAgICAgJ2dyYWRlRXhlcmNpc2UnXG4gICAgKVxuXG4gICAgLy8gcmVnaXN0ZXIgYSBuZXcgdXNlclxuICAgIGN5LnZpc2l0KCcvcmVnaXN0ZXInKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cInVzZXJuYW1lXCJdJylcbiAgICAgIC50eXBlKHVzZXJuYW1lKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cImVtYWlsXCJdJylcbiAgICAgIC50eXBlKGVtYWlsKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cInBhc3N3b3JkXCJdJylcbiAgICAgIC50eXBlKHBhc3N3b3JkKVxuICAgICAgLmdldCgnaW5wdXRbdHlwZT1cInN1Ym1pdFwiXScpXG4gICAgICAuY2xpY2soKVxuICAgICAgLndhaXQoJ0BjcmVhdGVVc2VyJylcblxuICAgIC8vIGFzc2VydCBleGVyY2lzZXMgYXJlIGRpc3BsYXllZCBjb3JyZWN0bHlcbiAgICBjeS5nZXQoJ2gxJylcbiAgICAgIC5jb250YWlucygnRXhlcmNpc2VzJylcbiAgICAgIC5nZXQoJy5ub3RpZmljYXRpb24uaXMtc3VjY2VzcycpXG4gICAgICAuY29udGFpbnMoJ1dlbGNvbWUhJylcbiAgICAgIC5nZXQoJy5ub3RpZmljYXRpb24uaXMtZGFuZ2VyJylcbiAgICAgIC5zaG91bGQoJ25vdC5iZS52aXNpYmxlJylcbiAgICAgIC5nZXQoJ2J1dHRvbi5idXR0b24uaXMtcHJpbWFyeScpXG4gICAgICAuY29udGFpbnMoJ1J1biBDb2RlJylcblxuICAgIC8vIGFzc2VydCB1c2VyIGNhbiBzdWJtaXQgYW4gZXhlcmNpc2VcbiAgICBjeS5nZXQoJ2J1dHRvbicpXG4gICAgICAuY29udGFpbnMoJ1J1biBDb2RlJylcbiAgICAgIC5jbGljaygpXG4gICAgICAud2FpdCg2MDApXG4gICAgICAuZ2V0KCdoNSA+IC5ncmFkZS10ZXh0JylcbiAgICAgIC5jb250YWlucygnSW5jb3JyZWN0IScpXG4gIH0pXG59KVxuIl19