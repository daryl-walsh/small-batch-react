{"version":3,"sources":["message.spec.js"],"names":["randomstring","require","username","generate","email","password","describe","it","cy","visit","get","type","click","contains","should","clear","wait"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AAEA,MAAMC,QAAQ,GAAGF,YAAY,CAACG,QAAb,EAAjB;AACA,MAAMC,KAAK,GAAI,GAAEF,QAAS,WAA1B;AACA,MAAMG,QAAQ,GAAG,eAAjB;AAEAC,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAClD;AACAC,IAAAA,EAAE,CAACC,KAAH,CAAS,WAAT,EACGC,GADH,CACO,wBADP,EAEGC,IAFH,CAEQT,QAFR,EAGGQ,GAHH,CAGO,qBAHP,EAIGC,IAJH,CAIQP,KAJR,EAKGM,GALH,CAKO,wBALP,EAMGC,IANH,CAMQN,QANR,EAOGK,GAPH,CAOO,sBAPP,EAQGE,KARH,GAFkD,CAYlD;;AACAJ,IAAAA,EAAE,CAACE,GAAH,CAAO,0BAAP,EACGG,QADH,CACY,UADZ,EAEGH,GAFH,CAEO,SAFP,EAGGE,KAHH,GAIGF,GAJH,CAIO,0BAJP,EAKGI,MALH,CAKU,gBALV,EAbkD,CAoBlD;;AACAN,IAAAA,EAAE,CAACE,GAAH,CAAO,gBAAP,EAAyBE,KAAzB;AACAJ,IAAAA,EAAE,CAACK,QAAH,CAAY,SAAZ,EAAuBD,KAAvB,GAtBkD,CAwBlD;;AACAJ,IAAAA,EAAE,CAACC,KAAH,CAAS,QAAT,EACGC,GADH,CACO,qBADP,EAEGC,IAFH,CAEQ,qBAFR,EAGGD,GAHH,CAGO,wBAHP,EAIGC,IAJH,CAIQN,QAJR,EAKGK,GALH,CAKO,sBALP,EAMGE,KANH,GAzBkD,CAiClD;;AACAJ,IAAAA,EAAE,CAACE,GAAH,CAAO,0BAAP,EACGI,MADH,CACU,gBADV,EAEGJ,GAFH,CAEO,yBAFP,EAGGG,QAHH,CAGY,sBAHZ,EAlCkD,CAuClD;;AACAL,IAAAA,EAAE,CAACE,GAAH,CAAO,qBAAP,EACGK,KADH,GAEGJ,IAFH,CAEQP,KAFR,EAGGM,GAHH,CAGO,wBAHP,EAIGK,KAJH,GAKGJ,IALH,CAKQN,QALR,EAMGK,GANH,CAMO,sBANP,EAOGE,KAPH,GAQGI,IARH,CAQQ,GARR,EAxCkD,CAkDlD;;AACAR,IAAAA,EAAE,CAACE,GAAH,CAAO,0BAAP,EACGG,QADH,CACY,UADZ,EAEGH,GAFH,CAEO,yBAFP,EAGGI,MAHH,CAGU,gBAHV,EAnDkD,CAwDlD;;AACAN,IAAAA,EAAE,CAACE,GAAH,CAAO,gBAAP,EAAyBE,KAAzB;AACAJ,IAAAA,EAAE,CAACK,QAAH,CAAY,SAAZ,EAAuBD,KAAvB,GA1DkD,CA4DlD;;AACAJ,IAAAA,EAAE,CAACK,QAAH,CAAY,QAAZ,EACGD,KADH,GAEGF,GAFH,CAEO,qBAFP,EAGGC,IAHH,CAGQP,KAHR,EAIGM,GAJH,CAIO,wBAJP,EAKGC,IALH,CAKQN,QALR,EAMGK,GANH,CAMO,sBANP,EAOGE,KAPH,GAQGI,IARH,CAQQ,GARR,EA7DkD,CAuElD;;AACAR,IAAAA,EAAE,CAACE,GAAH,CAAO,0BAAP,EACGG,QADH,CACY,UADZ,EAEGG,IAFH,CAEQ,IAFR,EAGGN,GAHH,CAGO,0BAHP,EAIGI,MAJH,CAIU,gBAJV;AAKD,GA7EC,CAAF;AA8ED,CA/EO,CAAR","sourcesContent":["const randomstring = require('randomstring')\n\nconst username = randomstring.generate()\nconst email = `${username}@test.com`\nconst password = 'Cypr3ssT3st!#'\n\ndescribe('Message', () => {\n  it('should display flash messages correctly', () => {\n    // register user\n    cy.visit('/register')\n      .get('input[name=\"username\"]')\n      .type(username)\n      .get('input[name=\"email\"]')\n      .type(email)\n      .get('input[name=\"password\"]')\n      .type(password)\n      .get('input[type=\"submit\"]')\n      .click()\n\n    // assert flash messages are removed when user clicks the 'x'\n    cy.get('.notification.is-success')\n      .contains('Welcome!')\n      .get('.delete')\n      .click()\n      .get('.notification.is-success')\n      .should('not.be.visible')\n\n    // log a user out\n    cy.get('.navbar-burger').click()\n    cy.contains('Log Out').click()\n\n    // attempt to log in\n    cy.visit('/login')\n      .get('input[name=\"email\"]')\n      .type('incorrect@email.com')\n      .get('input[name=\"password\"]')\n      .type(password)\n      .get('input[type=\"submit\"]')\n      .click()\n\n    // assert correct message is flashed\n    cy.get('.notification.is-success')\n      .should('not.be.visible')\n      .get('.notification.is-danger')\n      .contains('User does not exist.')\n\n    // log a user in\n    cy.get('input[name=\"email\"]')\n      .clear()\n      .type(email)\n      .get('input[name=\"password\"]')\n      .clear()\n      .type(password)\n      .get('input[type=\"submit\"]')\n      .click()\n      .wait(100)\n\n    // assert flash message is removed when a new message is flashed\n    cy.get('.notification.is-success')\n      .contains('Welcome!')\n      .get('.notification.is-danger')\n      .should('not.be.visible')\n\n    // log a user out\n    cy.get('.navbar-burger').click()\n    cy.contains('Log Out').click()\n\n    // log a user in\n    cy.contains('Log In')\n      .click()\n      .get('input[name=\"email\"]')\n      .type(email)\n      .get('input[name=\"password\"]')\n      .type(password)\n      .get('input[type=\"submit\"]')\n      .click()\n      .wait(100)\n\n    // assert flash message is removed after three seconds\n    cy.get('.notification.is-success')\n      .contains('Welcome!')\n      .wait(4000)\n      .get('.notification.is-success')\n      .should('not.be.visible')\n  })\n})\n"]}