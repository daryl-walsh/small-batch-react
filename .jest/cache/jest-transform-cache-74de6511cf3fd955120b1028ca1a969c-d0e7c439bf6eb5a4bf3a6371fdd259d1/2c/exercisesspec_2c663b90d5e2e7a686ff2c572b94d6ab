51b6946220455a183aea2200dd66e53c
const randomstring = require('randomstring');

const username = randomstring.generate();
const email = `${username}@test.com`;
const password = 'greaterthanten';
describe('Exercises', () => {
  it('should display the exercises correctly if a user is not logged in', () => {
    cy.visit('/').get('h1').contains('Exercises').get('.notification.is-warning').contains('Please log in to submit an exercise.').get('button').should('not.be.visible');
  });
  it('should allow a user to submit an exercise if logged in', () => {
    cy.server();
    cy.route('POST', 'auth/register').as('createUser');
    cy.route('POST', Cypress.env('REACT_APP_API_GATEWAY_URL')).as('gradeExercise'); // register a new user

    cy.visit('/register').get('input[name="username"]').type(username).get('input[name="email"]').type(email).get('input[name="password"]').type(password).get('input[type="submit"]').click().wait('@createUser'); // assert exercises are displayed correctly

    cy.get('h1').contains('Exercises').get('.notification.is-success').contains('Welcome!').get('.notification.is-danger').should('not.be.visible').get('button.button.is-primary').contains('Run Code'); // assert user can submit an exercise

    cy.get('button').contains('Run Code').click().wait(600).get('h5 > .grade-text').contains('Incorrect!');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4ZXJjaXNlcy5zcGVjLmpzIl0sIm5hbWVzIjpbInJhbmRvbXN0cmluZyIsInJlcXVpcmUiLCJ1c2VybmFtZSIsImdlbmVyYXRlIiwiZW1haWwiLCJwYXNzd29yZCIsImRlc2NyaWJlIiwiaXQiLCJjeSIsInZpc2l0IiwiZ2V0IiwiY29udGFpbnMiLCJzaG91bGQiLCJzZXJ2ZXIiLCJyb3V0ZSIsImFzIiwiQ3lwcmVzcyIsImVudiIsInR5cGUiLCJjbGljayIsIndhaXQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBNUI7O0FBRUEsTUFBTUMsUUFBUSxHQUFHRixZQUFZLENBQUNHLFFBQWIsRUFBakI7QUFDQSxNQUFNQyxLQUFLLEdBQUksR0FBRUYsUUFBUyxXQUExQjtBQUNBLE1BQU1HLFFBQVEsR0FBRyxnQkFBakI7QUFHQUMsUUFBUSxDQUFDLFdBQUQsRUFBYyxNQUFNO0FBQzFCQyxFQUFBQSxFQUFFLENBQUMsbUVBQUQsRUFBc0UsTUFBTTtBQUM1RUMsSUFBQUEsRUFBRSxDQUNDQyxLQURILENBQ1MsR0FEVCxFQUVHQyxHQUZILENBRU8sSUFGUCxFQUVhQyxRQUZiLENBRXNCLFdBRnRCLEVBR0dELEdBSEgsQ0FHTywwQkFIUCxFQUdtQ0MsUUFIbkMsQ0FHNEMsc0NBSDVDLEVBSUdELEdBSkgsQ0FJTyxRQUpQLEVBSWlCRSxNQUpqQixDQUl3QixnQkFKeEI7QUFLRCxHQU5DLENBQUY7QUFRQUwsRUFBQUEsRUFBRSxDQUFDLHdEQUFELEVBQTJELE1BQU07QUFDakVDLElBQUFBLEVBQUUsQ0FBQ0ssTUFBSDtBQUNBTCxJQUFBQSxFQUFFLENBQUNNLEtBQUgsQ0FBUyxNQUFULEVBQWlCLGVBQWpCLEVBQWtDQyxFQUFsQyxDQUFxQyxZQUFyQztBQUNBUCxJQUFBQSxFQUFFLENBQUNNLEtBQUgsQ0FBUyxNQUFULEVBQWlCRSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWixDQUFqQixFQUEyREYsRUFBM0QsQ0FBOEQsZUFBOUQsRUFIaUUsQ0FLakU7O0FBQ0FQLElBQUFBLEVBQUUsQ0FDQ0MsS0FESCxDQUNTLFdBRFQsRUFFR0MsR0FGSCxDQUVPLHdCQUZQLEVBRWlDUSxJQUZqQyxDQUVzQ2hCLFFBRnRDLEVBR0dRLEdBSEgsQ0FHTyxxQkFIUCxFQUc4QlEsSUFIOUIsQ0FHbUNkLEtBSG5DLEVBSUdNLEdBSkgsQ0FJTyx3QkFKUCxFQUlpQ1EsSUFKakMsQ0FJc0NiLFFBSnRDLEVBS0dLLEdBTEgsQ0FLTyxzQkFMUCxFQUsrQlMsS0FML0IsR0FNR0MsSUFOSCxDQU1RLGFBTlIsRUFOaUUsQ0FjakU7O0FBQ0FaLElBQUFBLEVBQUUsQ0FDQ0UsR0FESCxDQUNPLElBRFAsRUFDYUMsUUFEYixDQUNzQixXQUR0QixFQUVHRCxHQUZILENBRU8sMEJBRlAsRUFFbUNDLFFBRm5DLENBRTRDLFVBRjVDLEVBR0dELEdBSEgsQ0FHTyx5QkFIUCxFQUdrQ0UsTUFIbEMsQ0FHeUMsZ0JBSHpDLEVBSUdGLEdBSkgsQ0FJTywwQkFKUCxFQUltQ0MsUUFKbkMsQ0FJNEMsVUFKNUMsRUFmaUUsQ0FxQmpFOztBQUNBSCxJQUFBQSxFQUFFLENBQ0NFLEdBREgsQ0FDTyxRQURQLEVBQ2lCQyxRQURqQixDQUMwQixVQUQxQixFQUNzQ1EsS0FEdEMsR0FFR0MsSUFGSCxDQUVRLEdBRlIsRUFHR1YsR0FISCxDQUdPLGtCQUhQLEVBRzJCQyxRQUgzQixDQUdvQyxZQUhwQztBQUlELEdBMUJDLENBQUY7QUEyQkQsQ0FwQ08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJhbmRvbXN0cmluZyA9IHJlcXVpcmUoJ3JhbmRvbXN0cmluZycpO1xuXG5jb25zdCB1c2VybmFtZSA9IHJhbmRvbXN0cmluZy5nZW5lcmF0ZSgpO1xuY29uc3QgZW1haWwgPSBgJHt1c2VybmFtZX1AdGVzdC5jb21gXG5jb25zdCBwYXNzd29yZCA9ICdncmVhdGVydGhhbnRlbidcblxuXG5kZXNjcmliZSgnRXhlcmNpc2VzJywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIGRpc3BsYXkgdGhlIGV4ZXJjaXNlcyBjb3JyZWN0bHkgaWYgYSB1c2VyIGlzIG5vdCBsb2dnZWQgaW4nLCAoKSA9PiB7XG4gICAgY3lcbiAgICAgIC52aXNpdCgnLycpXG4gICAgICAuZ2V0KCdoMScpLmNvbnRhaW5zKCdFeGVyY2lzZXMnKVxuICAgICAgLmdldCgnLm5vdGlmaWNhdGlvbi5pcy13YXJuaW5nJykuY29udGFpbnMoJ1BsZWFzZSBsb2cgaW4gdG8gc3VibWl0IGFuIGV4ZXJjaXNlLicpXG4gICAgICAuZ2V0KCdidXR0b24nKS5zaG91bGQoJ25vdC5iZS52aXNpYmxlJyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgYWxsb3cgYSB1c2VyIHRvIHN1Ym1pdCBhbiBleGVyY2lzZSBpZiBsb2dnZWQgaW4nLCAoKSA9PiB7XG4gICAgY3kuc2VydmVyKCk7XG4gICAgY3kucm91dGUoJ1BPU1QnLCAnYXV0aC9yZWdpc3RlcicpLmFzKCdjcmVhdGVVc2VyJyk7XG4gICAgY3kucm91dGUoJ1BPU1QnLCBDeXByZXNzLmVudignUkVBQ1RfQVBQX0FQSV9HQVRFV0FZX1VSTCcpKS5hcygnZ3JhZGVFeGVyY2lzZScpO1xuXG4gICAgLy8gcmVnaXN0ZXIgYSBuZXcgdXNlclxuICAgIGN5XG4gICAgICAudmlzaXQoJy9yZWdpc3RlcicpXG4gICAgICAuZ2V0KCdpbnB1dFtuYW1lPVwidXNlcm5hbWVcIl0nKS50eXBlKHVzZXJuYW1lKVxuICAgICAgLmdldCgnaW5wdXRbbmFtZT1cImVtYWlsXCJdJykudHlwZShlbWFpbClcbiAgICAgIC5nZXQoJ2lucHV0W25hbWU9XCJwYXNzd29yZFwiXScpLnR5cGUocGFzc3dvcmQpXG4gICAgICAuZ2V0KCdpbnB1dFt0eXBlPVwic3VibWl0XCJdJykuY2xpY2soKVxuICAgICAgLndhaXQoJ0BjcmVhdGVVc2VyJyk7XG5cbiAgICAvLyBhc3NlcnQgZXhlcmNpc2VzIGFyZSBkaXNwbGF5ZWQgY29ycmVjdGx5XG4gICAgY3lcbiAgICAgIC5nZXQoJ2gxJykuY29udGFpbnMoJ0V4ZXJjaXNlcycpXG4gICAgICAuZ2V0KCcubm90aWZpY2F0aW9uLmlzLXN1Y2Nlc3MnKS5jb250YWlucygnV2VsY29tZSEnKVxuICAgICAgLmdldCgnLm5vdGlmaWNhdGlvbi5pcy1kYW5nZXInKS5zaG91bGQoJ25vdC5iZS52aXNpYmxlJylcbiAgICAgIC5nZXQoJ2J1dHRvbi5idXR0b24uaXMtcHJpbWFyeScpLmNvbnRhaW5zKCdSdW4gQ29kZScpO1xuXG4gICAgLy8gYXNzZXJ0IHVzZXIgY2FuIHN1Ym1pdCBhbiBleGVyY2lzZVxuICAgIGN5XG4gICAgICAuZ2V0KCdidXR0b24nKS5jb250YWlucygnUnVuIENvZGUnKS5jbGljaygpXG4gICAgICAud2FpdCg2MDApXG4gICAgICAuZ2V0KCdoNSA+IC5ncmFkZS10ZXh0JykuY29udGFpbnMoJ0luY29ycmVjdCEnKTtcbiAgfSlcbn0pXG4iXX0=