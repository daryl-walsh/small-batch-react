{"version":3,"sources":["exercises.spec.js"],"names":["randomstring","require","username","generate","email","password","describe","it","cy","visit","get","contains","should","server","route","as","Cypress","env","type","click","wait"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AAEA,MAAMC,QAAQ,GAAGF,YAAY,CAACG,QAAb,EAAjB;AACA,MAAMC,KAAK,GAAI,GAAEF,QAAS,WAA1B;AACA,MAAMG,QAAQ,GAAG,gBAAjB;AAGAC,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BC,EAAAA,EAAE,CAAC,mEAAD,EAAsE,MAAM;AAC5EC,IAAAA,EAAE,CACCC,KADH,CACS,GADT,EAEGC,GAFH,CAEO,IAFP,EAEaC,QAFb,CAEsB,WAFtB,EAGGD,GAHH,CAGO,0BAHP,EAGmCC,QAHnC,CAG4C,sCAH5C,EAIGD,GAJH,CAIO,QAJP,EAIiBE,MAJjB,CAIwB,gBAJxB;AAKD,GANC,CAAF;AAQAL,EAAAA,EAAE,CAAC,wDAAD,EAA2D,MAAM;AACjEC,IAAAA,EAAE,CAACK,MAAH;AACAL,IAAAA,EAAE,CAACM,KAAH,CAAS,MAAT,EAAiB,eAAjB,EAAkCC,EAAlC,CAAqC,YAArC;AACAP,IAAAA,EAAE,CAACM,KAAH,CAAS,MAAT,EAAiBE,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAjB,EAA2DF,EAA3D,CAA8D,eAA9D,EAHiE,CAKjE;;AACAP,IAAAA,EAAE,CACCC,KADH,CACS,WADT,EAEGC,GAFH,CAEO,wBAFP,EAEiCQ,IAFjC,CAEsChB,QAFtC,EAGGQ,GAHH,CAGO,qBAHP,EAG8BQ,IAH9B,CAGmCd,KAHnC,EAIGM,GAJH,CAIO,wBAJP,EAIiCQ,IAJjC,CAIsCb,QAJtC,EAKGK,GALH,CAKO,sBALP,EAK+BS,KAL/B,GAMGC,IANH,CAMQ,aANR,EANiE,CAcjE;;AACAZ,IAAAA,EAAE,CACCE,GADH,CACO,IADP,EACaC,QADb,CACsB,WADtB,EAEGD,GAFH,CAEO,0BAFP,EAEmCC,QAFnC,CAE4C,UAF5C,EAGGD,GAHH,CAGO,yBAHP,EAGkCE,MAHlC,CAGyC,gBAHzC,EAIGF,GAJH,CAIO,0BAJP,EAImCC,QAJnC,CAI4C,UAJ5C,EAfiE,CAqBjE;;AACAH,IAAAA,EAAE,CACCE,GADH,CACO,QADP,EACiBC,QADjB,CAC0B,UAD1B,EACsCQ,KADtC,GAEGC,IAFH,CAEQ,GAFR,EAGGV,GAHH,CAGO,kBAHP,EAG2BC,QAH3B,CAGoC,YAHpC;AAID,GA1BC,CAAF;AA2BD,CApCO,CAAR","sourcesContent":["const randomstring = require('randomstring');\n\nconst username = randomstring.generate();\nconst email = `${username}@test.com`\nconst password = 'greaterthanten'\n\n\ndescribe('Exercises', () => {\n  it('should display the exercises correctly if a user is not logged in', () => {\n    cy\n      .visit('/')\n      .get('h1').contains('Exercises')\n      .get('.notification.is-warning').contains('Please log in to submit an exercise.')\n      .get('button').should('not.be.visible');\n  });\n\n  it('should allow a user to submit an exercise if logged in', () => {\n    cy.server();\n    cy.route('POST', 'auth/register').as('createUser');\n    cy.route('POST', Cypress.env('REACT_APP_API_GATEWAY_URL')).as('gradeExercise');\n\n    // register a new user\n    cy\n      .visit('/register')\n      .get('input[name=\"username\"]').type(username)\n      .get('input[name=\"email\"]').type(email)\n      .get('input[name=\"password\"]').type(password)\n      .get('input[type=\"submit\"]').click()\n      .wait('@createUser');\n\n    // assert exercises are displayed correctly\n    cy\n      .get('h1').contains('Exercises')\n      .get('.notification.is-success').contains('Welcome!')\n      .get('.notification.is-danger').should('not.be.visible')\n      .get('button.button.is-primary').contains('Run Code');\n\n    // assert user can submit an exercise\n    cy\n      .get('button').contains('Run Code').click()\n      .wait(600)\n      .get('h5 > .grade-text').contains('Incorrect!');\n  })\n})\n"]}