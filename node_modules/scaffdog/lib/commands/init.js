"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const fs = tslib_1.__importStar(require("fs"));
const log_symbols_1 = tslib_1.__importDefault(require("log-symbols"));
const mkdirp_1 = tslib_1.__importDefault(require("mkdirp"));
const node_emoji_1 = require("node-emoji");
const path = tslib_1.__importStar(require("path"));
const flags_1 = require("../flags");
const utils_1 = require("../utils");
class InitCommand extends command_1.Command {
    async run() {
        const { flags: { templateDir }, } = this.parse(InitCommand);
        const cwd = process.cwd();
        const dir = path.resolve(cwd, templateDir);
        // create template directory
        if (utils_1.fileExists(dir)) {
            return this.error(`"${dir}" already exists.`);
        }
        if (utils_1.directoryExists(dir)) {
            this.log(`${log_symbols_1.default.info} skipping directory creation.`);
        }
        else {
            mkdirp_1.default.sync(dir);
        }
        // create first template
        const file = path.join(dir, 'hello.md');
        if (utils_1.fileExists(file)) {
            return this.error(`"${file}" already exists.`);
        }
        fs.writeFileSync(file, utils_1.createTemplate('hello'), 'utf8');
        this.log(node_emoji_1.emojify(`
:tada: ${chalk_1.default.green(`Created template for the first time! ${chalk_1.default.bold(`("${path.relative(cwd, file)}")`)}.`)}

Ready :dog: !!
You can scaffolding with ${chalk_1.default.bold('`$ scaffdog generate hello`')}.

Please refer to the following documents and customize it.
https://github.com/cats-oss/scaffdog/#templates
`));
        return this.exit(0);
    }
}
InitCommand.description = 'Prepare for using scaffdog. By default it creates a `.scaffdog` directory and creates a simple template.';
InitCommand.flags = Object.assign({}, flags_1.commonFlags);
exports.default = InitCommand;
//# sourceMappingURL=init.js.map