"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const fs = tslib_1.__importStar(require("fs"));
const node_emoji_1 = require("node-emoji");
const path = tslib_1.__importStar(require("path"));
const flags_1 = require("../flags");
const utils_1 = require("../utils");
class TemplateCommand extends command_1.Command {
    async run() {
        const { args, flags: { templateDir }, } = this.parse(TemplateCommand);
        const name = args.name;
        const cwd = process.cwd();
        const root = path.resolve(cwd, templateDir);
        const file = path.join(root, `${name}.md`);
        if (utils_1.fileExists(file)) {
            return this.error(`"${file}" already exists.`, { exit: 1 });
        }
        const content = utils_1.createTemplate(name);
        fs.writeFileSync(file, content, 'utf8');
        this.log(node_emoji_1.emojify(`
:sparkles: Created template ${chalk_1.default.bold(`"${path.relative(cwd, file)}"`)} !
`));
        return this.exit(0);
    }
}
TemplateCommand.description = 'Creating a template with the specified name.';
TemplateCommand.args = [
    {
        name: 'name',
        required: true,
        description: 'Template name.',
    },
];
TemplateCommand.flags = Object.assign({}, flags_1.commonFlags);
exports.default = TemplateCommand;
//# sourceMappingURL=template.js.map